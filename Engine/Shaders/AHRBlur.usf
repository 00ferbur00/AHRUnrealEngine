// @RyanTorant
#include "Common.usf"
#include "DeferredShadingCommon.usf"
#include "AHRCommon.usf"

Texture2D<float4> ObjNormal;
SamplerState samLinear;

Texture2D<float4> Trace;
Texture2D<float4> prevTrace;

// xy is pixel size
// zw is blur direction
float4 BlurData;

float4 main(float2 InUV : TEXCOORD0,float3 ScreenVector : TEXCOORD1) : SV_TARGET0
{
	float4 fcolor = 0;

	float SceneDepth = CalcSceneDepth(InUV);
	float3 wPos = ScreenVector * SceneDepth + View.ViewOrigin.xyz;

	fcolor += Trace.SampleLevel(samLinear,InUV - 5.49*BlurData.xy*BlurData.zw,0)*0.45f;
	fcolor += Trace.SampleLevel(samLinear,InUV - 4.45*BlurData.xy*BlurData.zw,0)*0.5f;
	fcolor += Trace.SampleLevel(samLinear,InUV - 3.4*BlurData.xy*BlurData.zw,0)*0.65f;
	fcolor += Trace.SampleLevel(samLinear,InUV - 2.2*BlurData.xy*BlurData.zw,0)*0.8f;
	fcolor += Trace.SampleLevel(samLinear,InUV - 1*BlurData.xy*BlurData.zw  ,0)*0.9f;
	fcolor += Trace.SampleLevel(samLinear,InUV                              ,0);
	fcolor += Trace.SampleLevel(samLinear,InUV + 1*BlurData.xy*BlurData.zw  ,0)*0.9f;
	fcolor += Trace.SampleLevel(samLinear,InUV + 2.2*BlurData.xy*BlurData.zw,0)*0.8f;
	fcolor += Trace.SampleLevel(samLinear,InUV + 3.4*BlurData.xy*BlurData.zw,0)*0.65f;
	fcolor += Trace.SampleLevel(samLinear,InUV + 4.45*BlurData.xy*BlurData.zw,0)*0.5f;
	fcolor += Trace.SampleLevel(samLinear,InUV + 5.49*BlurData.xy*BlurData.zw,0)*0.45f;

	fcolor *= 0.1316f;

	//fcolor += prevTrace.SampleLevel(samLinear,InUV,0);
	//fcolor *= 0.5f;

	return fcolor;
}
